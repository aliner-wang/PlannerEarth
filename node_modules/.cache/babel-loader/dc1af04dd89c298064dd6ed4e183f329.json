{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jerrickzhu/Desktop/PlannerEarth/PlannerEarth/src/components/ToDoList/form.js\";\nimport Axios from \"axios\";\nimport React from \"react\";\n\nconst Form = ({\n  setInputText,\n  todos,\n  setTodos,\n  inputText,\n  setStatus\n}) => {\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setTodos([...todos, {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 1000\n    }]);\n    setInputText(\"\"); // once the submit handle starts, meaning that once the user presses enter or presses the add button\n    // it will then send the inputText data via sendData.\n\n    sendData(inputText);\n  };\n\n  const statusHandler = e => {\n    setStatus(e.target.value);\n  };\n  /* sendData() sends the data (the text input) to the backend. */\n\n\n  function sendData(input) {\n    try {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(input)\n      };\n      fetch('http://localhost:5000', options);\n      console.log(\"data was sent!\");\n    } catch (e) {\n      console.log(\"did not work!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Add task\",\n      value: inputText,\n      onChange: inputTextHandler,\n      type: \"text\",\n      className: \"todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      className: \"todo-button\",\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus-square\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: statusHandler,\n      className: \"select\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"todos\",\n        className: \"filter-todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \" All \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \" Completed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"uncompleted\",\n          children: \" Uncompleted \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/jerrickzhu/Desktop/PlannerEarth/PlannerEarth/src/components/ToDoList/form.js"],"names":["Axios","React","Form","setInputText","todos","setTodos","inputText","setStatus","inputTextHandler","e","target","value","submitHandler","preventDefault","text","completed","id","Math","random","sendData","statusHandler","input","options","method","headers","body","JSON","stringify","fetch","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA,SAAhC;AAA2CC,EAAAA;AAA3C,CAAD,KAA2D;AACtE,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9BN,IAAAA,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIH,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EACG;AAACU,MAAAA,IAAI,EAAER,SAAP;AAAkBS,MAAAA,SAAS,EAAC,KAA5B;AAAmCC,MAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,KAAc;AAApD,KADH,CAAD,CAAR;AAEAf,IAAAA,YAAY,CAAC,EAAD,CAAZ,CAJ2B,CAK3B;AACA;;AACAgB,IAAAA,QAAQ,CAACb,SAAD,CAAR;AACD,GARD;;AAUA,QAAMc,aAAa,GAAIX,CAAD,IAAO;AAC3BF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;AAIA;;;AACA,WAASQ,QAAT,CAAkBE,KAAlB,EAAyB;AACvB,QAAI;AACF,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAG;AACR,0BAAgB;AADR,SAFI;AAKdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf;AALQ,OAAhB;AAOAO,MAAAA,KAAK,CAAC,uBAAD,EAA0BN,OAA1B,CAAL;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAVD,CAUE,OAAMrB,CAAN,EAAS;AACToB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF;;AAGD,sBACE;AAAA,4BACE;AAAO,MAAA,WAAW,EAAC,UAAnB;AAA8B,MAAA,KAAK,EAAExB,SAArC;AAAgD,MAAA,QAAQ,EAAEE,gBAA1D;AAA4E,MAAA,IAAI,EAAC,MAAjF;AAAwF,MAAA,SAAS,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEI,aAAjB;AAAgC,MAAA,SAAS,EAAC,aAA1C;AAAwD,MAAA,IAAI,EAAC,QAA7D;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,OAAO,EAAEQ,aAAd;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,SAAS,EAAC,aAA/B;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApDD;;KAAMlB,I;AAsDN,eAAeA,IAAf","sourcesContent":["import Axios from \"axios\";\nimport React from \"react\";\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos, {text: inputText, completed:false, id:Math.random()*1000}]);\n    setInputText(\"\");\n    // once the submit handle starts, meaning that once the user presses enter or presses the add button\n    // it will then send the inputText data via sendData.\n    sendData(inputText);\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  }\n\n  /* sendData() sends the data (the text input) to the backend. */\n  function sendData(input) {\n    try {\n      const options = {\n        method: 'POST',\n        headers : {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(input)\n      };\n      fetch('http://localhost:5000', options);\n      console.log(\"data was sent!\");\n    } catch(e) {\n      console.log(\"did not work!\");\n    }\n  }\n\n\n  return (\n    <form>\n      <input placeholder=\"Add task\" value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\"/>\n      <button onClick={submitHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"> </i>\n      </button>\n      <div onClick={statusHandler} className=\"select\">\n        <select name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\"> All </option>\n          <option value=\"completed\"> Completed </option>\n          <option value=\"uncompleted\"> Uncompleted </option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}