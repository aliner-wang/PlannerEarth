{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alinawang/Desktop/PlannerEarth/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Form from './components/ToDoList/form.js';\nimport TodoList from './components/ToDoList/todolist.js'; //React DF\n\nfunction App() {\n  _s();\n\n  //Input text = what the person types into the bar for their task\n  const [inputText, setInputText] = useState(\"\"); //List of all todos\n\n  const [todos, setTodos] = useState([]); //Filter status - if they want to see all, completed, uncompleted, important tasks\n\n  const [status, setStatus] = useState(\"all\"); //List of filtered todos - needed another list bc user might click all again and want original list saved as well\n\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]); //Filter out what the user wants to see based on category\n\n  const filterHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" My To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      todos: todos,\n      setTodos: setTodos,\n      setInputText: setInputText,\n      inputText: inputText,\n      status: status,\n      setStatus: setStatus,\n      status: status,\n      setFilteredTodos: setFilteredTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      setTodos: setTodos,\n      todos: todos,\n      filteredTodos: filteredTodos,\n      status: status,\n      filter: filterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n} // Express connecting to Data Base and grabbing the goods. \n\n\n_s(App, \"p5FZwsLXQe+x2mcLmqRBA6wRK7Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alinawang/Desktop/PlannerEarth/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Navbar","Form","TodoList","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","filterHandler"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,QAAP,MAAqB,mCAArB,C,CAGA;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAFa,CAGb;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC,CAJa,CAKb;;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC,CANa,CAOb;;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACN,KAAD,EAAQE,MAAR,CAFM,CAAT,CAVa,CAgBb;;AACA,QAAMI,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARF,eAWA,QAAC,IAAD;AACE,MAAA,KAAK,EAAEN,KADT;AACgB,MAAA,QAAQ,EAAEC,QAD1B;AACoC,MAAA,YAAY,EAAIF,YADpD;AAEE,MAAA,SAAS,EAAED,SAFb;AAEwB,MAAA,MAAM,EAAEI,MAFhC;AAEwC,MAAA,SAAS,EAAEC,SAFnD;AAGE,MAAA,MAAM,EAAID,MAHZ;AAGoB,MAAA,gBAAgB,EAAIG;AAHxC;AAAA;AAAA;AAAA;AAAA,YAXA,eAgBE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEJ,QAApB;AAA8B,MAAA,KAAK,EAAED,KAArC;AAA4C,MAAA,aAAa,EAAII,aAA7D;AAA4E,MAAA,MAAM,EAAIF,MAAtF;AAA8F,MAAA,MAAM,EAAII;AAAxG;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,C,CAKD;;;GA9CST,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Form from './components/ToDoList/form.js';\nimport TodoList from './components/ToDoList/todolist.js'\n\n\n//React DF\nfunction App() {\n  //Input text = what the person types into the bar for their task\n  const [inputText, setInputText] = useState(\"\");\n  //List of all todos\n  const [todos, setTodos] = useState([]);\n  //Filter status - if they want to see all, completed, uncompleted, important tasks\n  const [status, setStatus] = useState(\"all\");\n  //List of filtered todos - needed another list bc user might click all again and want original list saved as well\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  \n\n  //Filter out what the user wants to see based on category\n  const filterHandler = () => {\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' />\n        </Switch>\n      </Router>\n  \n    { <header>\n      <h1> My To-Do List</h1>\n    </header> }\n    <Form\n      todos={todos} setTodos={setTodos} setInputText = {setInputText}\n      inputText={inputText} status={status} setStatus={setStatus}\n      status = {status} setFilteredTodos = {setFilteredTodos}/>\n\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos = {filteredTodos} status = {status} filter = {filterHandler}/>\n    </div>\n  );\n}\n\n\n\n\n// Express connecting to Data Base and grabbing the goods. \nexport default App;"]},"metadata":{},"sourceType":"module"}