[{"/Users/alinawang/Desktop/PlannerEarth/src/index.js":"1","/Users/alinawang/Desktop/PlannerEarth/src/App.js":"2","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/form.js":"3","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todolist.js":"4","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/Navbar.js":"5","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todo.js":"6","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/BurgerItems.js":"7","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/MenuItems.js":"8"},{"size":174,"mtime":1607198241071,"results":"9","hashOfConfig":"10"},{"size":1772,"mtime":1607198241070,"results":"11","hashOfConfig":"10"},{"size":1051,"mtime":1607198241071,"results":"12","hashOfConfig":"10"},{"size":388,"mtime":1607198241071,"results":"13","hashOfConfig":"10"},{"size":1686,"mtime":1607198241071,"results":"14","hashOfConfig":"10"},{"size":1054,"mtime":1607198241071,"results":"15","hashOfConfig":"10"},{"size":127,"mtime":1607198241070,"results":"16","hashOfConfig":"10"},{"size":152,"mtime":1607198241070,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n07n70",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alinawang/Desktop/PlannerEarth/src/index.js",[],"/Users/alinawang/Desktop/PlannerEarth/src/App.js",["35"],"import React, { useState, useEffect} from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Form from './components/ToDoList/form.js';\nimport TodoList from './components/ToDoList/todolist.js'\n\nfunction App() {\n  //Input text = what the person types into the bar for their task\n  const [inputText, setInputText] = useState(\"\");\n  //List of all todos\n  const [todos, setTodos] = useState([]);\n  //Filter status - if they want to see all, completed, uncompleted, important tasks\n  const [status, setStatus] = useState(\"all\");\n  //List of filtered todos - needed another list bc user might click all again and want original list saved as well\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  //Filter out what the user wants to see based on category\n  const filterHandler = () => {\n    switch(status) {\n      case(\"completed\"):\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case(\"uncompleted\"):\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' />\n        </Switch>\n      </Router>\n  \n    <header>\n      <h1> My To-Do List</h1>\n    </header>\n    <Form\n      todos={todos} setTodos={setTodos} setInputText = {setInputText}\n      inputText={inputText} status={status} setStatus={setStatus}/>\n\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos = {filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/form.js",[],"/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todolist.js",[],"/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/Navbar.js",["36"],"/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todo.js",[],"/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/BurgerItems.js",["37"],"/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/MenuItems.js",["38"],{"ruleId":"39","severity":1,"message":"40","line":20,"column":6,"nodeType":"41","endLine":20,"endColumn":21,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":48,"column":15,"nodeType":"45","endLine":48,"endColumn":41},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["50"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",{"desc":"51","fix":"52"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"53","text":"54"},[854,869],"[todos, status, filterHandler]"]