[{"/Users/alinawang/Desktop/PlannerEarth/src/index.js":"1","/Users/alinawang/Desktop/PlannerEarth/src/App.js":"2","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todolist.js":"3","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/form.js":"4","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/Navbar.js":"5","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todo.js":"6","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/BurgerItems.js":"7","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/MenuItems.js":"8"},{"size":174,"mtime":1607216799458,"results":"9","hashOfConfig":"10"},{"size":1875,"mtime":1607414404240,"results":"11","hashOfConfig":"10"},{"size":418,"mtime":1607413518386,"results":"12","hashOfConfig":"10"},{"size":1598,"mtime":1607415117602,"results":"13","hashOfConfig":"10"},{"size":1686,"mtime":1607216799457,"results":"14","hashOfConfig":"10"},{"size":1322,"mtime":1607410755181,"results":"15","hashOfConfig":"10"},{"size":127,"mtime":1607216799457,"results":"16","hashOfConfig":"10"},{"size":152,"mtime":1607216799457,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"n07n70",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/alinawang/Desktop/PlannerEarth/src/index.js",[],["39","40"],"/Users/alinawang/Desktop/PlannerEarth/src/App.js",["41"],"/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todolist.js",[],"/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/form.js",["42"],"/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/Navbar.js",["43"],"import React, { useState } from 'react';\nimport { MenuItems } from \"./MenuItems\";\nimport burger from \"./burger.svg\";\nimport burgerFlip from \"./burgerflip.svg\";\nimport { Link } from \"react-router-dom\";\nimport './Navbar.css';\nimport { BurgerItems } from './BurgerItems';\n\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n\n  // shows the state of the sidebar if sidebar !sidebar is true.\n  const showSidebar = () => setSidebar(!sidebar)\n\n  return(\n\n    /* This nav tag creates the hamburger icon in the navbar. */\n    <nav className=\"navbarItems\">\n      <div className=\"menu-icon\">\n        <Link className='burger'>\n          <img src={burger} alt='burger' onClick={showSidebar}/>\n        </Link>\n      </div>\n\n      <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n        <ul className=\"nav-menu-items\">\n          <li className='navbar-toggle'>\n            <Link to='#' className='menu-bars'>\n              <img src={burgerFlip} alt='burgerflip' onClick={showSidebar} />\n            </Link>\n          </li>\n          {BurgerItems.map((item, index) => {\n            return (\n              <li key={index} className={item.cName}>\n                Overdue Tasks\n              </li>\n            )\n          })}\n        </ul>\n      </nav>\n\n      {/* The ul tags below creates the add button usericon in the nav bar. */}\n      <ul className='right-side'>\n        {MenuItems.map((item, index) => {\n          return(\n            <li key={index} className='right-side-nav'>\n              <a className={item.cName}>\n                {item.label}\n              </a>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n\n  )\n \n\n  \n}\n\n\n\nexport default Navbar\n","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todo.js",["44"],"import React from 'react';\nimport './todo.css'\n/* This file handles all todo task objects. \ntext: \ntodo: \ntodos: \nsetTodos*/\n\n\n\n\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n\n  //deletes task on list\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id))\n  };\n\n\n  // checks off thing on list\n  const completeHandler = () => {\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        return {\n          ...item, completed: !item.completed\n        }\n      }\n      return item;\n      })\n    );\n  };\n\n\n  const Edit = (text) => {\n    setTodos(todos.map(item => {\n      item.text = text\n    }))\n  }\n\n\n  //returns updaeted todo list with elements\n  return (\n    <div className = \"todo\">\n      <button className=\"important-btn\">\n        <i className=\"fas fa-certificate\"> </i>\n      </button>\n      <li className = {`todo-item ${todo.completed ? \"completed\" : \"\"}`}> {text} </li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"> </i>\n      </button>\n      <button onClick={Edit} className=\"edit-btn\">\n        <i className=\"fas fa-edit\"> </i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"> </i>\n      </button>\n\n    </div>\n  );\n};\n\nexport default Todo;\n\n\n\n","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/BurgerItems.js",["45"],"import React from 'react';\n\nexport const BurgerItems = [\n    {\n        label: 'Overdue Tasks',\n        cName: 'overdue'\n    }\n]","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/MenuItems.js",["46"],"import React from 'react';\n\nexport const MenuItems = [\n  {\n    label: \"+\",\n    cName: \"addButton\"\n  },\n  {\n    label: \"Picture\",\n    cName: \"pic\"\n  }\n]\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":22,"column":6,"nodeType":"53","endLine":22,"endColumn":21,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":48,"column":15,"nodeType":"61","endLine":48,"endColumn":41},{"ruleId":"62","severity":1,"message":"63","line":36,"column":29,"nodeType":"64","messageId":"65","endLine":36,"endColumn":31},{"ruleId":"55","severity":1,"message":"66","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"66","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"72","text":"73"},[867,882],"[todos, status, filterHandler]"]