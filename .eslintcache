[{"/Users/alinawang/Desktop/PlannerEarth/src/index.js":"1","/Users/alinawang/Desktop/PlannerEarth/src/App.js":"2","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todolist.js":"3","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/form.js":"4","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/Navbar.js":"5","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todo.js":"6","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/BurgerItems.js":"7","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/MenuItems.js":"8"},{"size":174,"mtime":1607216799458,"results":"9","hashOfConfig":"10"},{"size":1850,"mtime":1607417227700,"results":"11","hashOfConfig":"10"},{"size":418,"mtime":1607413518386,"results":"12","hashOfConfig":"10"},{"size":1601,"mtime":1607475266710,"results":"13","hashOfConfig":"10"},{"size":1694,"mtime":1607486776611,"results":"14","hashOfConfig":"10"},{"size":1346,"mtime":1607418549162,"results":"15","hashOfConfig":"10"},{"size":127,"mtime":1607216799457,"results":"16","hashOfConfig":"10"},{"size":152,"mtime":1607216799457,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"n07n70",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/alinawang/Desktop/PlannerEarth/src/index.js",[],["39","40"],"/Users/alinawang/Desktop/PlannerEarth/src/App.js",["41"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Form from './components/ToDoList/form.js';\nimport TodoList from './components/ToDoList/todolist.js'\n\n\n//React DF\nfunction App() {\n  //Input text = what the person types into the bar for their task\n  const [inputText, setInputText] = useState(\"\");\n  //List of all todos\n  const [todos, setTodos] = useState([]);\n  //Filter status - if they want to see all, completed, uncompleted, important tasks\n  const [status, setStatus] = useState(\"all\");\n  //List of filtered todos - needed another list bc user might click all again and want original list saved as well\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  \n\n  //Filter out what the user wants to see based on category\n  const filterHandler = () => {\n    switch(status) {\n      case(\"completed\"):\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case(\"uncompleted\"):\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' />\n        </Switch>\n      </Router>\n  \n    <header>\n      <h1> My To-Do List</h1>\n    </header> \n    <Form\n      todos={todos} setTodos={setTodos} setInputText = {setInputText}\n      inputText={inputText} status={status} setStatus={setStatus}/>\n\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos = {filteredTodos}/>\n    </div>\n  );\n}\n\n\n\n\n// Express connecting to Data Base and grabbing the goods. \nexport default App;","/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todolist.js",[],"/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/form.js",["42"],"import React, {useEffect} from \"react\";\nimport axios from 'axios';\nimport './form.css'\n//import './App.js'\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos, {text: inputText, completed:false, id:Math.random()*1000}]);\n    setInputText(\"\");\n    // once the submit handle starts, meaning that once the user presses enter or presses the add button\n    // it will then send the inputText data via sendData.\n    sendData(inputText);\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  }\n\n  /* sendData() sends the data (the text input) to the backend. */\n  function sendData(input) {\n    const data = {\n      content: input\n    }\n    axios.post('http://localhost:4000/app/todos', data)\n    .then(res => console.log(res.data))\n    .catch(e => console.log(e))\n  }\n\n\n  return (\n    <form>\n      <input placeholder=\"Add task\" value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\"/>\n      <button onClick={submitHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"> </i>\n      </button>\n      <div className=\"select\">\n        <select name=\"todos\" className=\"filter-todo\" onChange = {statusHandler}>\n          <option value=\"all\" > All </option>\n          <option value=\"completed\" > Completed </option>\n          <option value=\"uncompleted\" > Uncompleted </option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/Navbar.js",["43"],"/Users/alinawang/Desktop/PlannerEarth/src/components/ToDoList/todo.js",[],"/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/BurgerItems.js",["44"],"import React from 'react';\n\nexport const BurgerItems = [\n    {\n        label: 'Overdue Tasks',\n        cName: 'overdue'\n    }\n]","/Users/alinawang/Desktop/PlannerEarth/src/components/Navbar/MenuItems.js",["45"],"import React from 'react';\n\nexport const MenuItems = [\n  {\n    label: \"+\",\n    cName: \"addButton\"\n  },\n  {\n    label: \"Picture\",\n    cName: \"pic\"\n  }\n]\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":22,"column":6,"nodeType":"52","endLine":22,"endColumn":21,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":49,"column":15,"nodeType":"60","endLine":49,"endColumn":41},{"ruleId":"54","severity":1,"message":"61","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"61","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"67","text":"68"},[867,882],"[todos, status, filterHandler]"]